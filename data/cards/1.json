[
  {
    "id": "74ba46b8-f27d-4f28-b8db-a1acd76e9c36",
    "type": "problem_statement",
    "front": "Problem 1: Two Sum",
    "back": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "tags": [
      "problem",
      "statement"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025871",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "0e68db73-c860-4d22-889d-5ca978d27876",
    "type": "test_cases",
    "front": "Example test cases for Two Sum",
    "back": "```\n[2,7,11,15]\n9\n```",
    "tags": [
      "test_cases",
      "examples"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025913",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "0118230a-56e0-4a27-a6c4-c605a43a878f",
    "type": "algorithm",
    "front": "What's the algorithm approach for Two Sum?",
    "back": "Consider array traversal and manipulation\nUse hash table for O(1) lookups",
    "tags": [
      "algorithm",
      "approach"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025938",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "34a355a9-335d-45d8-81db-1b5c48e51ac1",
    "type": "complexity",
    "front": "What's the time and space complexity for Two Sum?",
    "back": "Time: O(n), Space: O(n) - typically one pass with hash table",
    "tags": [
      "complexity",
      "analysis"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025957",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "d96e354b-105f-40cc-8ed0-d30dfa18e22c",
    "type": "concepts",
    "front": "What are the key concepts for Two Sum?",
    "back": "Key concepts: Array, Hash Table",
    "tags": [
      "concepts",
      "tags"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025972",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "cd8946ba-6144-4622-9e57-8ed7fb80bb7b",
    "type": "pseudocode",
    "front": "Show the pseudocode solution for Two Sum",
    "back": "PSEUDOCODE for Two Sum:\n1. Create an empty hash map to store numbers and their indices\n2. Iterate through the array with index i and value num\n3. Calculate complement = target - num\n4. If complement exists in hash map, return [hash_map[complement], i]\n5. Otherwise, store num and its index i in hash map\n6. If no solution found, return empty array\n\nTime Complexity: O(n) - single pass through array\nSpace Complexity: O(n) - hash map storage",
    "tags": [
      "solution",
      "pseudocode",
      "algorithm"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.025990",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  },
  {
    "id": "dd42896a-6e89-4bbd-8042-4bc9f37eaff4",
    "type": "python_code",
    "front": "Show the Python code solution for Two Sum",
    "back": "```python\ndef twoSum(nums, target):\n    # Hash map to store numbers and their indices\n    num_map = {}\n    \n    # Iterate through array\n    for i, num in enumerate(nums):\n        # Calculate complement\n        complement = target - num\n        \n        # If complement exists, we found our pair\n        if complement in num_map:\n            return [num_map[complement], i]\n        \n        # Store current number and index\n        num_map[num] = i\n    \n    # No solution found\n    return []\n\n# Example usage\nnums = [2, 7, 11, 15]\ntarget = 9\nresult = twoSum(nums, target)\nprint(f\"Indices: {result}\")  # Output: [0, 1]\n```",
    "tags": [
      "solution",
      "python",
      "implementation"
    ],
    "difficulty": "EASY",
    "created_at": "2025-08-19T00:12:19.026005",
    "last_reviewed": null,
    "review_count": 0,
    "ease_factor": 2.5,
    "interval": 0
  }
]